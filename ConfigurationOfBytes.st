'From Pharo3.0 of 18 March 2013 [Latest update: #30796] on 13 March 2014 at 3:23:41.31047 pm'!Object subclass: #ConfigurationOfBytes	instanceVariableNames: 'project'	classVariableNames: 'LastVersionLoad'	poolDictionaries: ''	category: 'ConfigurationOfBytes'!!ConfigurationOfBytes commentStamp: '<historical>' prior: 0!!!ConfigurationOfBytes methodsFor: 'symbolic versions' stamp: 'sebastiansastre 3/12/2014 15:39'!stable: spec	<symbolicVersion: #'stable'>	spec for: #'pharo3.x' version: '1.0'! !!ConfigurationOfBytes methodsFor: 'baselines' stamp: 'sebastiansastre 3/13/2014 15:18'!baseline10: spec    <version: '1.0-baseline'>    	spec for: #'pharo3.x' do: [		self class ensureGitFileTree.		spec blessing: #baseline.		spec project: 'Aconcagua' with: [ spec				className: 'ConfigurationOfAconcagua';				file: 'ConfigurationOfAconcagua';				repository: 'http://smalltalkhub.com/mc/maxi/Aconcagua/main'.				].				].			! !!ConfigurationOfBytes methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfBytes methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^ project		ifNil: [ 			| constructor |				"Bootstrap Metacello if it is not already loaded"			(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.				"Construct Metacello project"			project := MetacelloMCProject new projectAttributes: self customProjectAttributes.			constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.			project loadType: #linear.	"change to #atomic if desired"			project ]! !!ConfigurationOfBytes methodsFor: 'versions' stamp: 'sebastiansastre 3/13/2014 15:19'!version10: spec	<version: '1.0' imports: #('1.0-baseline')>		spec		for: #'pharo3.x'		do: [ 			spec				blessing: #release;				author: 'sebastianconcept';				repository: 'gitfiletree://github.com/sebastianconcept/Bytes.git?protocol=git&branch=Pharo3.0&dir=src';				description: 'Bytes is a Smalltalk extension that helps you to express quantities of bytes in ways that people understand.'.			spec package: 'Bytes'.			 ].! !!ConfigurationOfBytes methodsFor: 'symbolic versions' stamp: 'sebastiansastre 3/12/2014 15:39'!stable: spec	<symbolicVersion: #'stable'>	spec for: #'pharo3.x' version: '1.0'! !!ConfigurationOfBytes methodsFor: 'baselines' stamp: 'sebastiansastre 3/13/2014 15:18'!baseline10: spec    <version: '1.0-baseline'>    	spec for: #'pharo3.x' do: [		self class ensureGitFileTree.		spec blessing: #baseline.		spec project: 'Aconcagua' with: [ spec				className: 'ConfigurationOfAconcagua';				file: 'ConfigurationOfAconcagua';				repository: 'http://smalltalkhub.com/mc/maxi/Aconcagua/main'.				].				].			! !!ConfigurationOfBytes methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!customProjectAttributes	 "Edit to return a collection of any custom attributes e.g. for conditional loading: Array with: #'Condition1' with: #'Condition2.	For more information see: http://code.google.com/p/metacello/wiki/CustomProjectAttrributes"	^ #().! !!ConfigurationOfBytes methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^ project		ifNil: [ 			| constructor |				"Bootstrap Metacello if it is not already loaded"			(self class baseConfigurationClassIfAbsent: [  ]) ensureMetacello.				"Construct Metacello project"			project := MetacelloMCProject new projectAttributes: self customProjectAttributes.			constructor := (Smalltalk at: #MetacelloVersionConstructor) on: self project: project.			project loadType: #linear.	"change to #atomic if desired"			project ]! !!ConfigurationOfBytes methodsFor: 'versions' stamp: 'sebastiansastre 3/13/2014 15:19'!version10: spec	<version: '1.0' imports: #('1.0-baseline')>		spec		for: #'pharo3.x'		do: [ 			spec				blessing: #release;				author: 'sebastianconcept';				repository: 'gitfiletree://github.com/sebastianconcept/Bytes.git?protocol=git&branch=Pharo3.0&dir=src';				description: 'Bytes is a Smalltalk extension that helps you to express quantities of bytes in ways that people understand.'.			spec package: 'Bytes'.			 ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ConfigurationOfBytes class	instanceVariableNames: ''!!ConfigurationOfBytes class commentStamp: '<historical>' prior: 0!!!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/13/2014 15:20'!catalogKeywords	^ #(#Units)! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/13/2014 15:19'!catalogDescription	^ 'Bytes is a Smalltalk extension that helps you to express quantities of bytes in ways that people understand. Hoomanz don''t want to hear about 2469606195 bytes they want to deal with 2.3 gigabytes and that''s what this software does :3.'! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/12/2014 17:08'!catalogKeyClassesAndExample	^ ''! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/13/2014 15:20'!catalogChangeLog	^ 'Date: March 13, 2014First Bytes configuration using github'! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/4/2014 10:54'!catalogContactInfo	^ 'https://github.com/sebastianconcept'! !!ConfigurationOfBytes class methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^self new project! !!ConfigurationOfBytes class methodsFor: 'gitfiletree support' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureGitFileTree	"And all related dependencies."	Smalltalk		at: #MCFileTreeGitRepository		ifAbsent: [ 			Gofer new				url: 'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main';				configurationOf: 'GitFileTree';				loadDevelopment ]! !!ConfigurationOfBytes class methodsFor: 'loading' stamp: 'sebastiansastre 3/4/2014 10:47'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfBytes class methodsFor: 'metacello tool support' stamp: 'sebastiansastre 3/4/2014 10:47'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfBytes class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfBytes class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfBytes class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfBytes class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfBytes class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/13/2014 15:20'!catalogKeywords	^ #(#Units)! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/13/2014 15:19'!catalogDescription	^ 'Bytes is a Smalltalk extension that helps you to express quantities of bytes in ways that people understand. Hoomanz don''t want to hear about 2469606195 bytes they want to deal with 2.3 gigabytes and that''s what this software does :3.'! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/12/2014 17:08'!catalogKeyClassesAndExample	^ ''! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/13/2014 15:20'!catalogChangeLog	^ 'Date: March 13, 2014First Bytes configuration using github'! !!ConfigurationOfBytes class methodsFor: 'catalog' stamp: 'sebastiansastre 3/4/2014 10:54'!catalogContactInfo	^ 'https://github.com/sebastianconcept'! !!ConfigurationOfBytes class methodsFor: 'accessing' stamp: 'sebastiansastre 3/4/2014 10:47'!project	^self new project! !!ConfigurationOfBytes class methodsFor: 'gitfiletree support' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureGitFileTree	"And all related dependencies."	Smalltalk		at: #MCFileTreeGitRepository		ifAbsent: [ 			Gofer new				url: 'http://smalltalkhub.com/mc/Pharo/MetaRepoForPharo30/main';				configurationOf: 'GitFileTree';				loadDevelopment ]! !!ConfigurationOfBytes class methodsFor: 'loading' stamp: 'sebastiansastre 3/4/2014 10:47'!load	"Load the #stable version defined for this platform. The #stable version is the version that is recommended to be used on this platform."	"self load"	<apiDocumentation>	^(self project version: #stable) load! !!ConfigurationOfBytes class methodsFor: 'metacello tool support' stamp: 'sebastiansastre 3/4/2014 10:47'!isMetacelloConfig	"Answer true and the Metacello tools will operate on you"		^true! !!ConfigurationOfBytes class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacello	(self baseConfigurationClassIfAbsent: []) ensureMetacello! !!ConfigurationOfBytes class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!baseConfigurationClassIfAbsent: aBlock	^Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			self ensureMetacelloBaseConfiguration.			Smalltalk at: #MetacelloBaseConfiguration ifAbsent: aBlock ].! !!ConfigurationOfBytes class methodsFor: 'private' stamp: 'sebastiansastre 3/4/2014 10:47'!ensureMetacelloBaseConfiguration	Smalltalk		at: #MetacelloBaseConfiguration		ifAbsent: [ 			| repository version |			repository := MCHttpRepository location: 'http://seaside.gemstone.com/ss/metacello' user: '' password: ''.			repository				versionReaderForFileNamed: 'Metacello-Base-DaleHenrichs.2.mcz'				do: [ :reader | 					version := reader version.					version load.					version workingCopy repositoryGroup addRepository: repository ] ]! !!ConfigurationOfBytes class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!DevelopmentSupport"See the methods in the 'development support' category on the class-side of MetacelloBaseConfiguration. Decide what development support methods you would like to use and copy them the the class-side of your configuration."	<apiDocumentation>! !!ConfigurationOfBytes class methodsFor: 'development support' stamp: 'sebastiansastre 3/4/2014 10:47'!validate	"Check the configuration for Errors, Critical Warnings, and Warnings (see class comment for MetacelloMCVersionValidator for more information). 	Errors identify specification issues that will result in unexpected behaviour when you load the configuration. 	Critical Warnings identify specification issues that may result in unexpected behavior when you load the configuration.	Warnings identify specification issues that are technically correct, but are worth take a look at."	"self validate"	<apiDocumentation>	self ensureMetacello.	^ ((Smalltalk at: #MetacelloToolBox) validateConfiguration: self debug: #() recurse: false) explore! !